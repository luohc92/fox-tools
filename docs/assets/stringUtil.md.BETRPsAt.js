import{_ as i,c as t,o as a,ag as e}from"./chunks/framework.BIjZygkc.js";const g=JSON.parse('{"title":"stringUtil","description":"","frontmatter":{},"headers":[],"relativePath":"stringUtil.md","filePath":"stringUtil.md"}'),n={name:"stringUtil.md"};function l(h,s,r,p,o,d){return a(),t("div",null,s[0]||(s[0]=[e('<h1 id="stringutil" tabindex="-1">stringUtil <a class="header-anchor" href="#stringutil" aria-label="Permalink to &quot;stringUtil&quot;">​</a></h1><h1 id="字符串工具" tabindex="-1">字符串工具 <a class="header-anchor" href="#字符串工具" aria-label="Permalink to &quot;字符串工具&quot;">​</a></h1><p><strong>使用</strong>：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {stringUtil} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;fox-tools&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h2 id="trim" tabindex="-1">trim <a class="header-anchor" href="#trim" aria-label="Permalink to &quot;trim&quot;">​</a></h2><p><strong>去除首尾空格</strong></p><p><strong>参数</strong>：<br><code>str: string</code> 输入字符串</p><p><strong>返回值</strong>：<br><code>string</code> 去除空格后的字符串</p><p><strong>示例</strong>：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stringUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">trim</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;  hello  &#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;hello&#39;</span></span></code></pre></div><h2 id="isempty" tabindex="-1">isEmpty <a class="header-anchor" href="#isempty" aria-label="Permalink to &quot;isEmpty&quot;">​</a></h2><p><strong>判断字符串是否为空</strong></p><p><strong>参数</strong>：<br><code>str: string | null | undefined</code> 输入字符串</p><p><strong>返回值</strong>：<br><code>boolean</code> 是否为 null、undefined 或空白字符</p><p><strong>示例</strong>：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stringUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isEmpty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;   &#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span></code></pre></div><h2 id="cameltosnake" tabindex="-1">camelToSnake <a class="header-anchor" href="#cameltosnake" aria-label="Permalink to &quot;camelToSnake&quot;">​</a></h2><p><strong>驼峰转下划线</strong></p><p><strong>参数</strong>：<br><code>str: string</code> 驼峰命名的字符串</p><p><strong>返回值</strong>：<br><code>string</code> 转换后的下划线命名字符串</p><p><strong>示例</strong>：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stringUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">camelToSnake</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;helloWorld&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;hello_world&#39;</span></span></code></pre></div><h2 id="snaketocamel" tabindex="-1">snakeToCamel <a class="header-anchor" href="#snaketocamel" aria-label="Permalink to &quot;snakeToCamel&quot;">​</a></h2><p><strong>下划线转驼峰</strong></p><p><strong>参数</strong>：<br><code>str: string</code> 下划线命名的字符串</p><p><strong>返回值</strong>：<br><code>string</code> 转换后的驼峰命名字符串</p><p><strong>示例</strong>：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stringUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">snakeToCamel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello_world&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;helloWorld&#39;</span></span></code></pre></div><h2 id="capitalize" tabindex="-1">capitalize <a class="header-anchor" href="#capitalize" aria-label="Permalink to &quot;capitalize&quot;">​</a></h2><p><strong>首字母大写</strong></p><p><strong>参数</strong>：<br><code>str: string</code> 输入字符串</p><p><strong>返回值</strong>：<br><code>string</code> 首字母大写后的字符串</p><p><strong>示例</strong>：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stringUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">capitalize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;world&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;World&#39;</span></span></code></pre></div><h2 id="includes" tabindex="-1">includes <a class="header-anchor" href="#includes" aria-label="Permalink to &quot;includes&quot;">​</a></h2><p><strong>判断是否包含子串</strong></p><p><strong>参数</strong>：</p><ul><li><code>str: string</code> 原始字符串</li><li><code>substr: string</code> 要查找的子串</li></ul><p><strong>返回值</strong>：<br><code>boolean</code> 是否包含该子串</p><p><strong>示例</strong>：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stringUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">includes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello world&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;world&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span></code></pre></div><h2 id="truncate" tabindex="-1">truncate <a class="header-anchor" href="#truncate" aria-label="Permalink to &quot;truncate&quot;">​</a></h2><p><strong>截断字符串并追加省略号</strong></p><p><strong>参数</strong>：</p><ul><li><code>str: string</code> 原始字符串</li><li><code>maxLength?: number</code> 最大长度（默认 20）</li></ul><p><strong>返回值</strong>：<br><code>string</code> 截断后的字符串</p><p><strong>示例</strong>：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stringUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">truncate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;This is a very long string.&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;This is a ...&#39;</span></span></code></pre></div><h2 id="sub" tabindex="-1">sub <a class="header-anchor" href="#sub" aria-label="Permalink to &quot;sub&quot;">​</a></h2><p><strong>字符串截取（支持负索引）</strong></p><p><strong>参数</strong>：</p><ul><li><code>str: string</code> 原始字符串</li><li><code>fromIndex: number</code> 起始索引</li><li><code>toIndex: number</code> 结束索引（不含）</li></ul><p><strong>返回值</strong>：<br><code>string</code> 截取后的字符串</p><p><strong>示例</strong>：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stringUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sub</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;abcdef&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;bcd&#39;</span></span></code></pre></div><h2 id="striphtml" tabindex="-1">stripHtml <a class="header-anchor" href="#striphtml" aria-label="Permalink to &quot;stripHtml&quot;">​</a></h2><p><strong>移除 HTML 标签</strong></p><p><strong>参数</strong>：<br><code>str: string</code> 包含 HTML 的字符串</p><p><strong>返回值</strong>：<br><code>string</code> 移除标签后的纯文本</p><p><strong>示例</strong>：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stringUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stripHtml</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&lt;p&gt;Hello&lt;/p&gt;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;Hello&#39;</span></span></code></pre></div><h2 id="removeprefix" tabindex="-1">removePrefix <a class="header-anchor" href="#removeprefix" aria-label="Permalink to &quot;removePrefix&quot;">​</a></h2><p><strong>移除前缀</strong></p><p><strong>参数</strong>：</p><ul><li><code>str: string</code> 原始字符串</li><li><code>prefix: string</code> 要移除的前缀</li></ul><p><strong>返回值</strong>：<br><code>string</code> 移除前缀后的字符串</p><p><strong>示例</strong>：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stringUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">removePrefix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;abc_test&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;abc_&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;test&#39;</span></span></code></pre></div><h2 id="removesuffix" tabindex="-1">removeSuffix <a class="header-anchor" href="#removesuffix" aria-label="Permalink to &quot;removeSuffix&quot;">​</a></h2><p><strong>移除后缀</strong></p><p><strong>参数</strong>：</p><ul><li><code>str: string</code> 原始字符串</li><li><code>suffix: string</code> 要移除的后缀</li></ul><p><strong>返回值</strong>：<br><code>string</code> 移除后缀后的字符串</p><p><strong>示例</strong>：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stringUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">removeSuffix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;report.xlsx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;.xlsx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;report&#39;</span></span></code></pre></div><h2 id="strtobytes" tabindex="-1">strToBytes <a class="header-anchor" href="#strtobytes" aria-label="Permalink to &quot;strToBytes&quot;">​</a></h2><p><strong>字符串转字节数组（UTF-8）</strong></p><p><strong>参数</strong>：</p><ul><li><code>str: string</code> 原始字符串</li><li><code>charset?: string</code> 编码，仅支持 <code>&#39;utf-8&#39;</code>（默认）</li></ul><p><strong>返回值</strong>：<br><code>Uint8Array</code> 转换后的字节数组</p><p><strong>示例</strong>：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stringUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">strToBytes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Uint8Array([...])</span></span></code></pre></div><h2 id="bytestostr" tabindex="-1">bytesToStr <a class="header-anchor" href="#bytestostr" aria-label="Permalink to &quot;bytesToStr&quot;">​</a></h2><p><strong>字节数组转字符串</strong></p><p><strong>参数</strong>：</p><ul><li><code>bytes: Uint8Array</code> 字节数组</li><li><code>charset?: string</code> 编码（默认 <code>&#39;utf-8&#39;</code>）</li></ul><p><strong>返回值</strong>：<br><code>string</code> 解码后的字符串</p><p><strong>示例</strong>：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stringUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bytesToStr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Uint8Array</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">104</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">105</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;hi&#39;</span></span></code></pre></div><h2 id="format" tabindex="-1">format <a class="header-anchor" href="#format" aria-label="Permalink to &quot;format&quot;">​</a></h2><p><strong>字符串模板格式化</strong></p><p><strong>参数</strong>：</p><ul><li><code>template: string</code> 模板字符串（含 <code>{}</code> 占位）</li><li><code>...params: any[]</code> 替换参数列表</li></ul><p><strong>返回值</strong>：<br><code>string</code> 格式化后的字符串</p><p><strong>示例</strong>：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stringUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">format</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello, {} {}!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;John&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Doe&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;Hello, John Doe!&#39;</span></span></code></pre></div><h2 id="mask" tabindex="-1">mask <a class="header-anchor" href="#mask" aria-label="Permalink to &quot;mask&quot;">​</a></h2><p><strong>字符串脱敏替换</strong></p><p><strong>参数</strong>：</p><ul><li><code>str: string</code> 原始字符串</li><li><code>start: number</code> 起始索引（支持负数）</li><li><code>end: number</code> 结束索引（不含，支持负数）</li><li><code>maskChar?: string</code> 替换字符，默认 <code>&#39;*&#39;</code></li></ul><p><strong>返回值</strong>：<br><code>string</code> 脱敏后的字符串</p><p><strong>示例</strong>：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stringUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;1234567890&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;123****890&#39;</span></span></code></pre></div><h2 id="createuuid" tabindex="-1">createUUID <a class="header-anchor" href="#createuuid" aria-label="Permalink to &quot;createUUID&quot;">​</a></h2><p><strong>生成 UUID</strong></p><p><strong>参数</strong>：<br> 无</p><p><strong>返回值</strong>：<br><code>string</code> 随机生成的 UUID</p><p><strong>示例</strong>：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stringUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createUUID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;b3f1ac2c-06c3-45ef-b0df-bf437aaad510&#39;</span></span></code></pre></div><h2 id="createrandomstring" tabindex="-1">createRandomString <a class="header-anchor" href="#createrandomstring" aria-label="Permalink to &quot;createRandomString&quot;">​</a></h2><p><strong>生成随机字符串</strong></p><p><strong>参数</strong>：</p><ul><li><code>length: number</code> 长度</li><li><code>includeSpecial: boolean</code> 是否包含特殊字符（默认 false）</li></ul><p><strong>返回值</strong>：<br><code>string</code> 随机生成的字符串</p><p><strong>示例</strong>：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stringUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createRandomString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;a1X@7dZq&#39;（示例）</span></span></code></pre></div>',116)]))}const c=i(n,[["render",l]]);export{g as __pageData,c as default};
